import streamlit as st
from utils.logger import log_info, log_error
from config import DEBUG, AUTH, MENU_OPTIONS
import authentication
import dashboards
import data_loader

def main():
    st.set_page_config(
        page_title="–õ–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã",
        page_icon="üí∞",
        layout="wide"
    )
    
    log_info("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = not AUTH

    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if AUTH and not st.session_state.authenticated:
            authenticator, name = authentication.show_auth_page()
            if not st.session_state.get('authenticated', False):
                return

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if not AUTH or st.session_state.authenticated:
            show_main_app()

    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(e)}")
        st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def show_main_app():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    with st.sidebar:
        st.title("üí∞ –õ–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã")
        
        if AUTH:
            st.write(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {st.session_state.username}")
            if st.button("–í—ã–π—Ç–∏"):
                authentication.logout()
        
        selected_page = st.radio(
            "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
            list(MENU_OPTIONS.keys()),
            format_func=lambda x: MENU_OPTIONS[x]
        )
    
    if selected_page == "dashboard":
        dashboards.show_dashboard_page()
    elif selected_page == "net_worth":
        dashboards.show_net_worth_page()
    elif selected_page == "income_expenses":
        dashboards.show_income_expenses_page()
    elif selected_page == "expense_breakdown":
        dashboards.show_expense_breakdown_page()
    elif selected_page == "budget":
        dashboards.show_budget_page()
    elif selected_page == "settings":
        show_settings_page()

def show_settings_page():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    st.title(MENU_OPTIONS["settings"])
    
    if DEBUG:
        st.info("üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω")
    
    with st.expander("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö"):
        st.write("""
        –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏:
        - Net Worth (Date, Assets, Liabilities)
        - Income (IncomeID, Date, Source, Amount)
        - Expenses (ExpenseID, Date, Category, Description, Amount)
        - Budget (Category, BudgetAmount)
        """)
        
        uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel", type=['xlsx'])
        if uploaded_file:
            try:
                data_loader.process_uploaded_file(uploaded_file)
                st.success("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
            except ValueError as ve:
                log_error(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞: {str(ve)}")
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ñ–∞–π–ª–∞: {str(ve)}")
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")
                st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")

if __name__ == "__main__":
    main() 